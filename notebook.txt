Assignment Location:
/projects/bgmp/shared/Bi622/QAA_data_assignments.txt

Assigned File Pairs:
2_2B_control_S2_L008    Undetermined_S0_L008

Data Location and files:
/projects/bgmp/shared/2017_sequencing/demultiplexed/
/projects/bgmp/shared/2017_sequencing/demultiplexed/2_2B_control_S2_L008_R1_001.fastq.gz
/projects/bgmp/shared/2017_sequencing/demultiplexed/2_2B_control_S2_L008_R2_001.fastq.gz
/projects/bgmp/shared/2017_sequencing/demultiplexed/Undetermined_S0_L008_R1_001.fastq.gz
/projects/bgmp/shared/2017_sequencing/demultiplexed/Undetermined_S0_L008_R2_001.fastq.gz

--------------------
FASTQC HELP
--------------------
fastqc [-o output dir] [--(no)extract] [-f fastq|bam|sam] 
           [-c contaminant file] seqfile1 .. seqfileN
--------------------
Command to find lengths:
zcat /projects/bgmp/shared/2017_sequencing/demultiplexed/Undetermined_S0_L008_R1_001.fastq.gz | wc -l
zcat /projects/bgmp/shared/2017_sequencing/demultiplexed/2_2B_control_S2_L008_R1_001.fastq.gz | wc -l
----------
Running dist.py on files:
[2_2B Controll] Input Reads == 23322660 / 4 == 5830665
[Undetermined] Input Reads == 59040664 / 4 == 14760166

Read Length for both files == 101 via fastqc

COMMANDS:
Interactive environment command: srun --account=bgmp --partition=bgmp --nodes=1 --ntasks-per-node=1 --time=2:00:00 --cpus-per-task=1 --pty bash
Activate environment: conda activate QAA
./dist.py -f /projects/bgmp/shared/2017_sequencing/demultiplexed/2_2B_control_S2_L008_R1_001.fastq.gz -r 5830665 -l 101
./dist.py -f /projects/bgmp/shared/2017_sequencing/demultiplexed/2_2B_control_S2_L008_R2_001.fastq.gz -r 5830665 -l 101
./dist.py -f /projects/bgmp/shared/2017_sequencing/demultiplexed/Undetermined_S0_L008_R1_001.fastq.gz -r 14760166 -l 101
./dist.py -f /projects/bgmp/shared/2017_sequencing/demultiplexed/Undetermined_S0_L008_R2_001.fastq.gz -r 14760166 -l 101

Comparing dist.py results to fastqc:
    2_2B_control_S2_L008
        For both R1 and R2, the distribution is conserved. It seems dist.py and fastqc generate similar quality score distribution results.
    Undetermined_S0_L008
        For both R1 and R2, the distribution is conserved. It seems dist.py and fastqc generate similar quality score distribution results.
General notes:
    Fastqc error bar attribute is useful when assessing the overall confidence given quality score per base.
    2_2B_control_S2_L008 libraries have higher quality than Undetermined_S0_L008. 

PART 2:
    Cutadapt:
    For paired-end reads:
    cutadapt -a ADAPT1 -A ADAPT2 [options] -o out1.fastq -p out2.fastq in1.fastq in2.fastq

    cutadapt -a AGATCGGAAGAGCACACGTCTGAACTCCAGTCA -A AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT \
    -o trimmed_2_2B_control_S2_L008_R1_001.fastq -p trimmed_2_2B_control_S2_L008_R2_001.fastq \
    /projects/bgmp/shared/2017_sequencing/demultiplexed/2_2B_control_S2_L008_R1_001.fastq.gz \
    /projects/bgmp/shared/2017_sequencing/demultiplexed/2_2B_control_S2_L008_R2_001.fastq.gz 

    cutadapt -a AGATCGGAAGAGCACACGTCTGAACTCCAGTCA -A AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT \
    -o trimmed_Undetermined_S0_L008_R1_001.fastq -p trimmed_Undetermined_S0_L008_R2_001.fastq \
    /projects/bgmp/shared/2017_sequencing/demultiplexed/Undetermined_S0_L008_R1_001.fastq.gz \
    /projects/bgmp/shared/2017_sequencing/demultiplexed/Undetermined_S0_L008_R2_001.fastq.gz

Cutadapt output:
----------------
**UNDETERMINED**
=== Summary ===

Total read pairs processed:         14,760,166
  Read 1 with adapter:                 543,021 (3.7%)
  Read 2 with adapter:                 607,660 (4.1%)
Pairs written (passing filters):    14,760,166 (100.0%)

Total basepairs processed: 2,981,553,532 bp
  Read 1: 1,490,776,766 bp
  Read 2: 1,490,776,766 bp
Total written (filtered):  2,968,880,881 bp (99.6%)
  Read 1: 1,484,746,362 bp
  Read 2: 1,484,134,519 bp
----------------  
**CONTROL**
=== Summary ===

Total read pairs processed:          5,830,665
  Read 1 with adapter:                 423,128 (7.3%)
  Read 2 with adapter:                 473,368 (8.1%)
Pairs written (passing filters):     5,830,665 (100.0%)

Total basepairs processed: 1,177,794,330 bp
  Read 1:   588,897,165 bp
  Read 2:   588,897,165 bp
Total written (filtered):  1,160,435,631 bp (98.5%)
  Read 1:   580,298,948 bp
  Read 2:   580,136,683 bp
----------------------
Trimmomatic:
./trimmomatic.sh

input files:
/projects/bgmp/dmarro/bioinfo/Bi623/assignments/FastQC/QAA/trimmed_2_2B_control_S2_L008_R1_001
/projects/bgmp/dmarro/bioinfo/Bi623/assignments/FastQC/QAA/trimmed_2_2B_control_S2_L008_R2_001

Output files:
contol_filtered2P.fq.gz
control_filtered1P.fq.gz
control_filtered1U.fq.gz
control_filtered2U.gq.gz

input files:
/projects/bgmp/dmarro/bioinfo/Bi623/assignments/FastQC/QAA/trimmed_Undetermined_S0_L008_R1_001
/projects/bgmp/dmarro/bioinfo/Bi623/assignments/FastQC/QAA/trimmed_Undetermined_S0_L008_R2_001

output files:
undetermined_filtered1P
undetermined_filtered1U
undetermined_filtered2P
undetermined_filtered2U

For plotting distributions:
Output from lendist.py for each output file is put into a .tsv which was imported to R. Using ggplot,
a barplot of frequencies and bp lengths per file is generated and exists as trimmomatic_distributions.png.

For #7. Comment: 
Expected forward reads to trim more extensively than reverse reads. This was exhibited in trimmomatic_distributions.png.
Due to reverse reads having been fed reference information on forward read- quality is likely higher. 

------------------------
Part 3: 
Genome database generated using STAR via star.gen.sh 
Fasta and gtf files were decompressed (gunzip) prior to running STAR.

star.align.sh for trimmomatic product fastq files. 1P:2P

star alignment generated files:
control.log.final.out
undetermined.log.final.out

control.out.sam
undetermined.out.sam

map.py script will count mapped vs. unmapped reads 

./map.py -f control.out.sam
Reads Mapped 11022029
Reads unmapped 283047
Reads 12247712

./map.py -f undetermined.out.sam
Reads Mapped 15497385
Reads unmapped 8822757
Reads 25438002

htseq-count
htseq-count -f sam undetermined.out.sam Mus_musculus.GRCm39.107.gtf --stranded=yes >undetermined_htseqF.txt
htseq-count -f sam undetermined.out.sam Mus_musculus.GRCm39.107.gtf --stranded=reverse >undetermined_htseqR.txt

htseq-count -f sam control.out.sam Mus_musculus.GRCm39.107.gtf --stranded=yes > control_htseqF.txt
htseq-count -f sam control.out.sam Mus_musculus.GRCm39.107.gtf --stranded=reverse > control_htseqR.txt
